{"ast":null,"code":"var _jsxFileName = \"/Users/samuelaparker/Desktop/Workspace/seasons/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); //this is the only time we do direct assignment to this.state\n\n    this.state = {\n      lat: null,\n      long: null,\n      errorMessage: ''\n    }; //our state object\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude,\n      long: position.coords.longitude\n    }), err => this.setState({\n      errorMessage: err.message\n    }));\n  } //conditional rendering\n\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 20\n        }\n      }, \"Error: \", this.state.errorMessage);\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }\n      }, \"Latitude: \", this.state.lat, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }), \"Longitude: \", this.state.long);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }\n    }, \"Loading..\");\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 1\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/samuelaparker/Desktop/Workspace/seasons/src/index.js"],"names":["React","ReactDOM","App","Component","constructor","props","state","lat","long","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","err","message","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAGA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,IAAI,EAAE,IAAnB;AAAyBC,MAAAA,YAAY,EAAE;AAAvC,KAAb,CAJe,CAI2C;AAC7D;;AAGDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACIC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAACT,MAAAA,GAAG,EAAEQ,QAAQ,CAACE,MAAT,CAAgBC,QAAtB;AAAgCV,MAAAA,IAAI,EAAEO,QAAQ,CAACE,MAAT,CAAgBE;AAAtD,KAAd,CADhB,EAEIC,GAAG,IAAI,KAAKJ,QAAL,CAAc;AAACP,MAAAA,YAAY,EAAEW,GAAG,CAACC;AAAnB,KAAd,CAFX;AAIH,GAd6B,CAgB9B;;;AACAC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKhB,KAAL,CAAWG,YAAX,IAA2B,CAAC,KAAKH,KAAL,CAAWC,GAA3C,EAAgD;AAC5C,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWG,YAAxB,CAAP;AACH;;AACD,QAAI,CAAC,KAAKH,KAAL,CAAWG,YAAZ,IAA4B,KAAKH,KAAL,CAAWC,GAA3C,EAAgD;AAC5C,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKD,KAAL,CAAWC,GAA3B,eACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO,iBAEK,KAAKD,KAAL,CAAWE,IAFhB,CAAP;AAGH;;AAED,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAEH;;AA7B6B;;AAiClCP,QAAQ,CAACqB,MAAT,eACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,EAEAC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        //this is the only time we do direct assignment to this.state\n        this.state = { lat: null, long: null, errorMessage: '' }; //our state object\n    }\n    \n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({lat: position.coords.latitude, long: position.coords.longitude}), \n            err => this.setState({errorMessage: err.message}) \n        ); \n    }\n\n    //conditional rendering\n    render() {         \n        if (this.state.errorMessage && !this.state.lat) {\n            return <div>Error: {this.state.errorMessage}</div>\n        }\n        if (!this.state.errorMessage && this.state.lat) {\n            return <div>Latitude: {this.state.lat} \n            <br />\n            Longitude: {this.state.long}</div>\n        }\n        \n        return <div>Loading..</div>  \n        \n    }\n}\n\n\nReactDOM.render(\n<App />,\ndocument.querySelector('#root')\n\n);"]},"metadata":{},"sourceType":"module"}